/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.cidarlab.makerfluidics.cc;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;

/**
 *
 * @author krishna
 */
public class App extends javax.swing.JFrame {

    private String cmdText;
    private SequenceGenerator generator;
    
    /**
     * Creates new form App
     */
    public App() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jFileChooser1 = new javax.swing.JFileChooser();
        openCommandsButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        cmdTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        terminalTextArea = new javax.swing.JTextArea();
        sequenceControlPanel = new javax.swing.JPanel();
        startSequenceButton = new javax.swing.JButton();
        pauseSequenceButton = new javax.swing.JButton();
        stopSequenceButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        generateCommandPanel = new javax.swing.JPanel();
        generateHWCommandsButton = new javax.swing.JButton();
        generationProgressBar = new javax.swing.JProgressBar();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        openCommandsButton.setText("Open Commands");
        openCommandsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openCommandsButtonActionPerformed(evt);
            }
        });

        cmdTextArea.setEditable(false);
        cmdTextArea.setColumns(20);
        cmdTextArea.setRows(5);
        jScrollPane1.setViewportView(cmdTextArea);

        terminalTextArea.setColumns(20);
        terminalTextArea.setRows(5);
        jScrollPane2.setViewportView(terminalTextArea);

        sequenceControlPanel.setEnabled(false);

        startSequenceButton.setText("Start Sequence");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sequenceControlPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), startSequenceButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pauseSequenceButton.setText("Pause Sequence");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sequenceControlPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), pauseSequenceButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        stopSequenceButton.setText("Stop Sequence");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sequenceControlPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), stopSequenceButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout sequenceControlPanelLayout = new javax.swing.GroupLayout(sequenceControlPanel);
        sequenceControlPanel.setLayout(sequenceControlPanelLayout);
        sequenceControlPanelLayout.setHorizontalGroup(
            sequenceControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sequenceControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sequenceControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startSequenceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pauseSequenceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stopSequenceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        sequenceControlPanelLayout.setVerticalGroup(
            sequenceControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sequenceControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startSequenceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pauseSequenceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopSequenceButton)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLabel1.setText("Command Terminal");

        jLabel2.setText("File Preview");

        generateCommandPanel.setEnabled(false);

        generateHWCommandsButton.setText("Generate HW Commands");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, generateCommandPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), generateHWCommandsButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        generateHWCommandsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateHWCommandsButtonActionPerformed(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, generateCommandPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), generationProgressBar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Synringe Pumps", " " }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, generateCommandPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), jComboBox1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout generateCommandPanelLayout = new javax.swing.GroupLayout(generateCommandPanel);
        generateCommandPanel.setLayout(generateCommandPanelLayout);
        generateCommandPanelLayout.setHorizontalGroup(
            generateCommandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generateCommandPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generateCommandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generationProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generateHWCommandsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        generateCommandPanelLayout.setVerticalGroup(
            generateCommandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generateCommandPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generateHWCommandsButton)
                .addGap(13, 13, 13)
                .addComponent(generationProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generateCommandPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(openCommandsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sequenceControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(openCommandsButton)
                        .addGap(18, 18, 18)
                        .addComponent(generateCommandPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sequenceControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openCommandsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openCommandsButtonActionPerformed

        if(evt.getSource() == openCommandsButton){
            sequenceControlPanel.setEnabled(false);
            int retval = jFileChooser1.showOpenDialog(this);
            if(retval == JFileChooser.APPROVE_OPTION){
                File selectedfile = jFileChooser1.getSelectedFile();
                loadfileText(selectedfile);
                generateCommandPanel.setEnabled(true);
            }
            
            
            
        }
    }//GEN-LAST:event_openCommandsButtonActionPerformed

    private void generateHWCommandsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateHWCommandsButtonActionPerformed
        
        generator = new SequenceGenerator(cmdText);
        generator.getCommands();
        
        sequenceControlPanel.setEnabled(true);
    }//GEN-LAST:event_generateHWCommandsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try{
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }catch(Exception ex){
            System.err.println("Could not get system look and feel");
        }

        /* Create and display the form */
       
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea cmdTextArea;
    private javax.swing.JPanel generateCommandPanel;
    private javax.swing.JButton generateHWCommandsButton;
    private javax.swing.JProgressBar generationProgressBar;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton openCommandsButton;
    private javax.swing.JButton pauseSequenceButton;
    private javax.swing.JPanel sequenceControlPanel;
    private javax.swing.JButton startSequenceButton;
    private javax.swing.JButton stopSequenceButton;
    private javax.swing.JTextArea terminalTextArea;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void loadfileText(File selectedfile) {
        try {
            cmdText = new String(Files.readAllBytes(selectedfile.toPath()));
            cmdTextArea.setText(cmdText);
        } catch (IOException ex) {
            System.err.println(ex.getMessage());
            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
